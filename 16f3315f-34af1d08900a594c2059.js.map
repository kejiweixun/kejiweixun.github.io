{"version":3,"sources":["webpack:///./src/pages/merge-images.js"],"names":["hStyle","miniprogramLink","formStyle","radioStyle","thumbnailStyle","buttonsStyle","canvasContainerStyle","canvasStyle","imageInfo","useState","images","setImages","thumbnails","setThumbnails","direction","widthSetting","alignVertical","heightSetting","alignHorizontal","watermark","watermarkColor","backgroundColor","margin","opacity","fontSize","setting","setSetting","setMargin","setOpacity","setFontSize","setWatermarkColor","width","height","outputImageSize","setOutputImageSize","elementBeingDragged","getThumbnail","getOneThumbnail","a","image","Promise","resolve","reject","canvas","document","createElement","ctx","getContext","sWidth","Math","min","sHeight","img","Image","src","url","onload","fillStyle","fillRect","drawImage","thumbnail","toDataURL","dataURL","promiseArray","map","all","hexToRgbA","hex","c","test","substring","split","length","join","Error","useEffect","getElementById","dpr","window","devicePixelRatio","imagesCompressSize","imageSizeCompress","widthCompressed","heightCompressed","largestWidth","max","largestHeight","imagesNew","widthEqual","heightWhenWidthEqual","heightEqual","widthWhenHeightEqual","round","totalWidthAddMargin","reduce","b","totalHeightAddMargin","style","save","restore","sx","sy","dx","dy","dWidth","dHeight","index","replace","textAlign","textBaseline","font","translate","rotate","PI","sqrt","textWidth","measureText","x","y","fillText","entries","slice","mergeImages","display","onSelectImages","e","files","target","URL","createObjectURL","getImageSize","imageUrl","file","imagesWithSizeInfo","deleteImage","dataset","imagesTemp","JSON","parse","stringify","splice","onEnterKeyDeleteImage","key","onDrag","onDrop","elementBeingSwap","border","urlOfElementBeingSwap","filter","urlOfWlementBeingDragged","index_1","indexOf","index_2","tempElement","onDragOver","preventDefault","onDragEnter","onDragLeave","changeForm","settingName","name","settingValue","value","includes","settingTemp","debounceChangeSlider","useCallback","debounce","onChangeSlider","persist","debounceInput","content","css","href","className","htmlFor","type","id","checked","onChange","disabled","placeholder","water","onInput","step","multiple","accept","onClick","download","removeAttribute","outputImage","role","random","draggable","onDragStart","alt","tabIndex","onKeyDown","data-index","deleteIcon","title","slug"],"mappings":"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","file":"16f3315f-34af1d08900a594c2059.js","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\"\nimport Layout from \"../component/layout\"\nimport { css } from \"@emotion/core\"\nimport Helmet from \"react-helmet\"\nimport ISSO from \"../component/comment\"\nimport deleteIcon from '../image/delete.svg'\nimport debounce from 'lodash.debounce'\n\nconst hStyle = css`\n    font-size: clamp(1.3rem, 1vw + 1.3rem, 1.8rem);\n    text-align: center;\n    margin: 1em 0;\n`\n\nconst miniprogramLink = css`\ncolor: black;\ntext-decoration: none;\ndisplay: inline-block;\nposition: relative;\n:after {\n    content: '';\n    display: block;\n    position: absolute;\n    bottom: 2px;\n    background-color: rgba(183, 28, 28, 0.25);\n    width: 100%;\n    height: 0.5rem;\n    }\n:hover:after {\n    text-decoration: none;\n    background-color: rgba(242, 156, 56, 0.25);\n    }\n`\n\nconst formStyle = css`\n    .form-radio {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(7em, 1fr));\n        grid-gap: 0.2em;\n        p {\n            font-size: 1.2rem;\n            font-weight: bold;\n            margin-bottom: 0.5em;\n            grid-column: 1 / -1;\n        }\n        label input {\n            margin-right: 0.4em;\n        }\n    }\n    .form-slider {\n        p {\n            font-size: 1.2rem;\n            font-weight: bold;\n            margin-bottom: 0.5em;\n        }\n        label {\n            vertical-align: middle;\n        }\n        input {\n            width: 80%;\n            max-width: 300px;\n            margin-right: 0.5em;\n        }\n    }\n    .form-text-input {\n        p {\n            font-size: 1.2rem;\n            font-weight: bold;\n            margin-bottom: 0.5em;\n        }\n        input {\n            font-size: 1rem;\n            padding: 0.1em 0.2em;\n            width: 100%;\n            max-width: 300px;\n        }\n    }\n    .form-color {\n        p {\n            font-size: 1.2rem;\n            font-weight: bold;\n            margin-bottom: 0.5em;\n        }\n        input {\n            margin-right: 0.8em;\n        }\n    }\n`\n\nconst radioStyle = css`\n    display: grid;\n    grid-template-columns: min-content auto;\n    grid-gap: 0.5em;\n    span {\n        display: flex;\n        input {\n            width: 0px;\n            height: 0px;\n            opacity: 0;\n            position: absolute;\n        }\n        span {\n            display: block;\n            width: 1em;\n            height: 1em;\n            border: 0.1em solid currentColor;\n            color: rgb(27, 178, 10);\n        }\n        input: checked + span {\n            background-color: currentColor;\n        }\n        input: focus + span {\n            box-shadow: 0 0 0 0.05em #fff, 0 0 0.15em 0.1em currentColor;\n        }\n        input[disabled] + span {\n            border: 0.1em solid grey;\n            background-color: grey;\n        }\n    }\n    span {\n        line-height: 1;\n    }\n`\n\nconst thumbnailStyle = css`\n  margin: 2em 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 3em);\n  grid-gap: 15px;\n  div {\n      display: flex;\n      flex-direction: row-reverse;\n      width: 3em;\n      height: 3em;\n  }\n  .image-thumbnail {\n      object-fit: cover;\n      width: 3em;\n      height: 3em;\n      box-shadow: 0 0 3px grey;\n  }\n  .delete-icon {\n      width: 1em;\n      height: 1em;\n      position: absolute;\n      transform: translate(0.5em, -0.5em);\n  }\n`\n\nconst buttonsStyle = css`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  margin: 30px 0;\n  place-items: center;\n  font-weight: bold;\n  .chooseImageBtn {\n      label input {\n          width: 0;\n          height: 0;\n          opacity: 0;\n          position: absolute;\n      }\n      label span {\n          cursor: pointer;\n      }\n  }\n  .saveImageBtn a {\n      text-decoration: none;\n      color: black;\n  }\n  .button {\n        font-size: 1.3rem;\n        background-color: lightcyan;\n        padding: 0.2em 0.4em;\n        border: 1px solid grey;\n        border-radius: 0.2em;\n        box-shadow: 0 0 3px grey;\n        :hover {\n            background-color: wheat;\n          }\n        input: focus + span {\n            border: 2px solid black;\n            border-radius: 0.2em;\n        }\n  }\n\n`\n\nconst canvasContainerStyle = css`\n    width: 100%;\n    max-height: 1000px;\n    overflow: scroll;\n    padding: 5px;\n    display: flex;\n`\n\nconst canvasStyle = css`\n  display: block;\n  box-shadow: 0 0 3px grey;\n  margin: auto;\n`\n\nconst imageInfo = css`\n    margin: 5px 0 50px 0;\n    text-align: center;\n`\n\n\nexport default () => {\n    const [images, setImages] = useState([]);\n    const [thumbnails, setThumbnails] = useState([]);\n    const [setting, setSetting] = useState({\n        direction: 'vertical',\n        widthSetting: 'equalWidth',\n        alignVertical: 'alignCenterVertical',\n        heightSetting: 'equalHeight',\n        alignHorizontal: 'alignCenterHorizontal',\n        watermark: '',\n        watermarkColor: '#e66465',\n        backgroundColor: '#ffffff',\n        margin: 10,\n        opacity: 0.3,\n        fontSize: 50,\n    });\n    const [margin, setMargin] = useState(setting.margin);\n    const [opacity, setOpacity] = useState(setting.opacity);\n    const [fontSize, setFontSize] = useState(setting.fontSize);\n    const [watermarkColor, setWatermarkColor] = useState(setting.watermarkColor);\n    const [outputImageSize, setOutputImageSize] = useState({\n        width: 0,\n        height: 0,\n    });\n\n    var elementBeingDragged = '';\n\n    async function getThumbnail(images) {\n        function getOneThumbnail(image) {\n            return new Promise((resolve, reject) => {\n                const canvas = document.createElement('canvas');\n                const ctx = canvas.getContext('2d');\n                canvas.width = 100;\n                canvas.height = 100;\n                const sWidth = Math.min(image.height, image.width);\n                const sHeight = Math.min(image.height, image.width);\n                const img = new Image();\n                img.src = image.url;\n                img.onload = () => {\n                    ctx.fillStyle = 'white';\n                    ctx.fillRect(0, 0, 100, 100);\n                    ctx.drawImage(img, 0, 0, sWidth, sHeight, 0, 0, 100, 100);\n                    const thumbnail = canvas.toDataURL('image/jpeg');\n                    resolve({\n                        dataURL: thumbnail,\n                        url: image.url\n                    });\n                    reject('get thumbnail 出错')\n                }\n            })\n        };\n        const promiseArray = images.map(image => getOneThumbnail(image));\n        return await Promise.all(promiseArray);\n    }\n\n    function hexToRgbA(hex) {\n        var c;\n        if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n            c = hex.substring(1).split('');\n            if (c.length === 3) {\n                c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n            }\n            c = '0x' + c.join('');\n            return 'rgba(' + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',') + ',1)';\n        }\n        throw new Error('Bad Hex');\n    }\n\n    useEffect(() => {\n        (async () => {\n            setThumbnails(await getThumbnail(images))\n        })()\n    }, [images]);\n\n    useEffect(() => {\n        const canvas = document.getElementById('canvas');\n        if (images.length) {\n            function mergeImages(images, setting) {\n                const dpr = window.devicePixelRatio;\n                const {\n                    direction,\n                    widthSetting,\n                    alignVertical,\n                    heightSetting,\n                    alignHorizontal,\n                    watermark,\n                    watermarkColor,\n                    backgroundColor,\n                    margin,\n                    opacity,\n                    fontSize\n                } = setting;\n                const canvas = document.getElementById('canvas');\n                const ctx = canvas.getContext('2d');\n                const imagesCompressSize = images.map(image => {\n                    const imageSizeCompress = (() => {\n                        var width = image.width;\n                        var height = image.height;\n                        if (image.width > image.height && image.height > 2000) {\n                            height = 2000;\n                            width = image.width / image.height * 2000;\n                        };\n                        if (image.height > image.width && image.width > 2000) {\n                            width = 2000;\n                            height = image.height / image.width * 2000;\n                        };\n                        return {\n                            width,\n                            height\n                        }\n                    })();\n                    return {\n                        url: image.url,\n                        width: image.width,\n                        height: image.height,\n                        widthCompressed: imageSizeCompress.width,\n                        heightCompressed: imageSizeCompress.height,\n                    }\n                });\n                const largestWidth = Math.max(...imagesCompressSize.map(image => image.widthCompressed));\n                const largestHeight = Math.max(...imagesCompressSize.map(image => image.heightCompressed));\n                const imagesNew = imagesCompressSize.map(image => {\n                    var widthEqual = image.widthCompressed;\n                    var heightWhenWidthEqual = image.heightCompressed;\n                    var heightEqual = image.heightCompressed;\n                    var widthWhenHeightEqual = image.widthCompressed;\n                    if (direction === 'vertical' && widthSetting === 'equalWidth') {\n                        widthEqual = largestWidth;\n                        heightWhenWidthEqual = image.height / image.width * widthEqual;\n                    } else if (direction === 'horizontal' && heightSetting === 'equalHeight') {\n                        heightEqual = largestHeight;\n                        widthWhenHeightEqual = image.width / image.height * heightEqual;\n                    };\n                    return {\n                        url: image.url,\n                        width: image.width,\n                        height: image.height,\n                        widthEqual: widthEqual,\n                        heightWhenWidthEqual: Math.round(heightWhenWidthEqual),\n                        heightEqual: heightEqual,\n                        widthWhenHeightEqual: Math.round(widthWhenHeightEqual),\n                    }\n                });\n                const totalWidth = imagesNew.reduce((a, b) => a + b.widthWhenHeightEqual, 0);\n                const totalWidthAddMargin = totalWidth + margin * (imagesNew.length - 1);\n                const totalHeight = imagesNew.reduce((a, b) => a + b.heightWhenWidthEqual, 0);\n                const totalHeightAddMargin = totalHeight + margin * (imagesNew.length - 1);\n                if (direction === 'vertical') {\n                    canvas.width = largestWidth;\n                    canvas.height = totalHeightAddMargin;\n                    if (Math.round(largestWidth / dpr) > 600) {\n                        canvas.style.width = '600px';\n                        canvas.style.height = `${canvas.height / canvas.width * 600}px`\n                    } else {\n                        canvas.style.width = `${Math.round(largestWidth / dpr)}px`;\n                        canvas.style.height = `${canvas.height / canvas.width * Math.round(largestWidth / dpr)}px`\n                    }\n                } else {\n                    canvas.width = totalWidthAddMargin;\n                    canvas.height = largestHeight;\n                    if (Math.round(largestHeight / dpr) > 800) {\n                        canvas.style.height = '800px';\n                        canvas.style.width = `${canvas.width / canvas.height * 800}px`\n                    } else {\n                        canvas.style.height = `${Math.round(largestHeight / dpr)}px`;\n                        canvas.style.width = `${canvas.width / canvas.height * Math.round(largestHeight / dpr)}px`\n                    }\n                };\n                setOutputImageSize({\n                    width: canvas.width,\n                    height: canvas.height\n                })\n                ctx.save();\n                ctx.fillStyle = backgroundColor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                ctx.restore();\n                const drawImage = function (image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight, index) {\n                    const img = new Image();\n                    img.src = image.url;\n                    img.onload = async () => {\n                        ctx.drawImage(img, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n                        if (index === imagesNew.length - 1) {\n                            if (watermark && imagesNew.length) {\n                                ctx.save();\n                                ctx.fillStyle = hexToRgbA(watermarkColor).replace(/,1\\)/g, `,${opacity})`);\n                                ctx.textAlign = 'center';\n                                ctx.textBaseline = 'middle';\n                                ctx.font = `${fontSize}px serif`;\n                                ctx.translate(Math.round(canvas.width / 2), Math.round(canvas.height / 2));\n                                ctx.rotate(45 * Math.PI / 180);\n                                const length = Math.sqrt(canvas.width / 2 * canvas.width / 2 + canvas.height / 2 * canvas.height / 2);\n                                const textWidth = ctx.measureText(watermark).width;\n                                for (let x = 0; x < length; x = x + textWidth * 1 + fontSize * 2) {\n                                    for (let y = 0; y < length; y = y + fontSize * 3) {\n                                        if (x === 0 && y === 0) {\n                                            ctx.fillText(watermark, x, y, length);\n                                        } else if (x === 0 && y !== 0) {\n                                            ctx.fillText(watermark, x, y, length);\n                                            ctx.fillText(watermark, x, -y, length);\n                                        } else if (x !== 0 && y === 0) {\n                                            ctx.fillText(watermark, x, y, length);\n                                            ctx.fillText(watermark, -x, y, length);\n                                        } else {\n                                            ctx.fillText(watermark, x, y, length);\n                                            ctx.fillText(watermark, -x, y, length);\n                                            ctx.fillText(watermark, x, -y, length);\n                                            ctx.fillText(watermark, -x, -y, length);\n                                        }\n                                    }\n                                }\n                                ctx.restore();\n                            }\n                        }\n                    }\n                };\n                for (let [index, image] of imagesNew.entries()) {\n                    const sx = 0;\n                    const sy = 0;\n                    const sWidth = image.width;\n                    const sHeight = image.height;\n                    if (direction === 'vertical') {\n                        if (widthSetting === 'equalWidth') {\n                            const dx = 0;\n                            const dy = imagesNew.slice(0, index).reduce((a, b) => a + b.heightWhenWidthEqual, 0) + margin * index;\n                            const dWidth = image.widthEqual;\n                            const dHeight = image.heightWhenWidthEqual;\n                            drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight, index);\n                        } else {\n                            if (alignVertical === 'alignLeft') {\n                                const dx = 0;\n                                const dy = imagesNew.slice(0, index).reduce((a, b) => a + b.heightEqual, 0) + margin * index;\n                                const dWidth = image.widthEqual;\n                                const dHeight = image.heightWhenWidthEqual;\n                                drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight, index);\n                            } else if (alignVertical === 'alignCenterVertical') {\n                                const dx = Math.round((largestWidth - image.widthEqual) / 2);\n                                const dy = imagesNew.slice(0, index).reduce((a, b) => a + b.heightEqual, 0) + margin * index;\n                                const dWidth = image.widthEqual;\n                                const dHeight = image.heightWhenWidthEqual;\n                                drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight, index);\n                            } else if (alignVertical === 'alignRight') {\n                                const dx = largestWidth - image.widthEqual;\n                                const dy = imagesNew.slice(0, index).reduce((a, b) => a + b.heightEqual, 0) + margin * index;\n                                const dWidth = image.widthEqual;\n                                const dHeight = image.heightWhenWidthEqual;\n                                drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight, index);\n                            }\n                        }\n                    } else {\n                        if (heightSetting === 'equalHeight') {\n                            const dy = 0;\n                            const dx = imagesNew.slice(0, index).reduce((a, b) => a + b.widthWhenHeightEqual, 0) + margin * index;\n                            const dWidth = image.widthWhenHeightEqual;\n                            const dHeight = image.heightEqual;\n                            drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight, index);\n                        } else {\n                            if (alignHorizontal === 'alignTop') {\n                                const dy = 0;\n                                const dx = imagesNew.slice(0, index).reduce((a, b) => a + b.widthEqual, 0) + margin * index;\n                                const dWidth = image.widthWhenHeightEqual;\n                                const dHeight = image.heightEqual;\n                                drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight, index);\n                            } else if (alignHorizontal === 'alignCenterHorizontal') {\n                                const dy = Math.round((largestHeight - image.heightEqual) / 2);\n                                const dx = imagesNew.slice(0, index).reduce((a, b) => a + b.widthEqual, 0) + margin * index;\n                                const dWidth = image.widthWhenHeightEqual;\n                                const dHeight = image.heightEqual;\n                                drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight, index);\n                            } else if (alignHorizontal === 'alignBottom') {\n                                const dy = largestHeight - image.heightEqual;\n                                const dx = imagesNew.slice(0, index).reduce((a, b) => a + b.widthEqual, 0) + margin * index;\n                                const dWidth = image.widthWhenHeightEqual;\n                                const dHeight = image.heightEqual;\n                                drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight, index);\n                            }\n                        }\n                    };\n                };\n            };\n            mergeImages(images, setting);\n            canvas.style.display = '';\n        } else {\n            canvas.style.display = 'none';\n        }\n    }, [images, setting]);\n\n    const onSelectImages = async (e) => {\n        const files = [...e.target.files].map(image => URL.createObjectURL(image));\n        const getImageSize = (imageUrl) => {\n            return new Promise((resolve, reject) => {\n                const img = new Image();\n                img.src = imageUrl;\n                img.onload = () => {\n                    resolve({\n                        width: +img.width,\n                        height: +img.height,\n                        url: img.src\n                    });\n                    reject('出错')\n                }\n            })\n        };\n        const imagesWithSizeInfo = await Promise.all(files.map(file => getImageSize(file)));\n        setImages(imagesWithSizeInfo)\n    };\n\n    const deleteImage = function (e) {\n        const index = e.target.dataset.index;\n        const imagesTemp = JSON.parse(JSON.stringify(images))\n        imagesTemp.splice(index, 1)\n        setImages(imagesTemp)\n    };\n\n    const onEnterKeyDeleteImage = function (e) {\n        if (e.key === 'Enter' || e.key === 'enter') {\n            deleteImage(e)\n        }\n        return;\n    };\n\n    const saveImage = function () {\n        const canvas = document.getElementById('canvas');\n        const a = document.getElementById('download');\n        if (canvas.width === 0) {\n            a.removeAttribute('href')\n        } else {\n            const outputImage = canvas.toDataURL('image/jpeg');\n            a.href = outputImage;\n        }\n    };\n\n    const onDrag = function (e) {\n        elementBeingDragged = e.target;\n    }\n\n    const onDrop = function (e) {\n        const elementBeingSwap = e.target;\n        elementBeingSwap.style.border = 'none';\n        if (elementBeingSwap.src === elementBeingDragged.src) return;\n        const imagesTemp = JSON.parse(JSON.stringify(images));\n        const urlOfElementBeingSwap = thumbnails.filter(thumbnail => thumbnail.dataURL === elementBeingSwap.src)[0].url;\n        const urlOfWlementBeingDragged = thumbnails.filter(thumbnail => thumbnail.dataURL === elementBeingDragged.src)[0].url;\n        const index_1 = imagesTemp.map(image => image.url).indexOf(urlOfElementBeingSwap)\n        const index_2 = imagesTemp.map(image => image.url).indexOf(urlOfWlementBeingDragged)\n        const tempElement = imagesTemp[index_1];\n        imagesTemp[index_1] = imagesTemp[index_2];\n        imagesTemp[index_2] = tempElement;\n        setImages(imagesTemp);\n    }\n\n    const onDragOver = function (e) {\n        e.preventDefault();\n    }\n\n    const onDragEnter = function (e) {\n        e.target.style.border = '1px solid red'\n    }\n\n    const onDragLeave = function (e) {\n        e.target.style.border = 'none';\n    }\n\n    const changeForm = function (e) {\n        const settingName = e.target.name;\n        const settingValue = e.target.value;\n        if (!['margin', 'fontSize', 'opacity'].includes(settingName)) {\n            const settingTemp = JSON.parse(JSON.stringify(setting));\n            settingTemp[settingName] = settingValue;\n            setSetting(settingTemp)\n        }\n    }\n\n    const changeSliderHandler = function (e) {\n        const value = e.target.value;\n        const name = e.target.name;\n        const settingTemp = JSON.parse(JSON.stringify(setting));\n        settingTemp[name] = value;\n        setSetting(settingTemp)\n    }\n\n    const debounceChangeSlider = useCallback(debounce(changeSliderHandler, 250), [setting]);\n\n    const onChangeSlider = function (e) {\n        e.persist();\n        const value = e.target.value;\n        const name = e.target.name;\n        switch (name) {\n            case 'margin': {\n                setMargin(value);\n                break;\n            }\n            case 'fontSize': {\n                setFontSize(value);\n                break;\n            }\n            case 'opacity': {\n                setOpacity(value);\n                break;\n            }\n            case 'watermarkColor': {\n                setWatermarkColor(value);\n                break;\n            }\n            default: {\n                break;\n            }\n        };\n        debounceChangeSlider(e);\n    }\n\n    const debounceInput = useCallback(debounce(changeForm, 250), [setting])\n\n    const onInput = function (e) {\n        e.persist()\n        debounceInput(e)\n    }\n\n    return (\n        <Layout>\n            <Helmet>\n                <title>图片拼接 | 长图拼接 | 拼长图</title>\n                <meta\n                    name=\"description\"\n                    content=\"图片拼接, 把多张图片合并成一张, 支持纵向或横向拼接, 可以把多张图片拼接成一张长图片, 还能添加水印.\"\n                />\n            </Helmet>\n            <h1 css={hStyle}>图片拼接</h1>\n            <p>\n                图片拼接, 把多张图片合并成一张, 支持纵向或横向拼接, 还能添加水印. 该工具完全离线运行, 手机建议使用<a href=\"weixin://dl/business/?ticket=ldc56edf0536370441b8a0fbf090d395c\" css={miniprogramLink}>微信小程序\"拼长图\"</a>, 手机浏览器点击可直接跳转到该小程序.\n            </p>\n            <section>\n                <form css={formStyle} >\n                    <div className=\"form-radio\" >\n                        <p>拼接方向：</p>\n                        <label htmlFor=\"vertical\" css={radioStyle}>\n                            <span>\n                                <input\n                                    type=\"radio\"\n                                    id=\"vertical\"\n                                    name=\"direction\"\n                                    value=\"vertical\"\n                                    checked={setting.direction === 'vertical'}\n                                    onChange={changeForm} />\n                                <span></span>\n                            </span>\n                            <span>纵向拼接</span>\n                        </label>\n                        <label htmlFor=\"horizontal\" css={radioStyle}>\n                            <span>\n                                <input\n                                    type=\"radio\"\n                                    id=\"horizontal\"\n                                    name=\"direction\"\n                                    value=\"horizontal\"\n                                    checked={setting.direction === 'horizontal'}\n                                    onChange={changeForm} />\n                                <span></span>\n                            </span>\n                            <span> 横向拼接</span>\n                        </label>\n                    </div>\n                    {\n                        setting.direction === 'vertical' ? (\n                            <div className=\"form-radio\">\n                                <p>宽度设置：</p>\n                                <label htmlFor=\"equalWidth\" css={radioStyle}>\n                                    <span>\n                                        <input\n                                            type=\"radio\"\n                                            id=\"equalWidth\"\n                                            name=\"widthSetting\"\n                                            value=\"equalWidth\"\n                                            checked={setting.widthSetting === 'equalWidth'}\n                                            onChange={changeForm} />\n                                        <span></span>\n                                    </span>\n                                    <span>等宽</span>\n                                </label>\n                                <label htmlFor=\"originalWidth\" css={radioStyle}>\n                                    <span>\n                                        <input\n                                            type=\"radio\"\n                                            id=\"originalWidth\"\n                                            name=\"widthSetting\"\n                                            value=\"originalWidth\"\n                                            checked={setting.widthSetting === 'originalWidth'}\n                                            onChange={changeForm} />\n                                        <span></span>\n                                    </span>\n                                    <span>原始宽度</span>\n                                </label>\n                            </div>\n                        ) : (\n                                <div className=\"form-radio\" >\n                                    <p>高度设置：</p>\n                                    <label htmlFor=\"equalHeight\" css={radioStyle}>\n                                        <span>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"equalHeight\"\n                                                name=\"heightSetting\"\n                                                value=\"equalHeight\"\n                                                checked={setting.heightSetting === 'equalHeight'}\n                                                onChange={changeForm} />\n                                            <span></span>\n                                        </span>\n                                        <span>等高</span>\n                                    </label>\n                                    <label htmlFor=\"originalHeight\" css={radioStyle}>\n                                        <span>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"originalHeight\"\n                                                name=\"heightSetting\"\n                                                value=\"originalHeight\"\n                                                checked={setting.heightSetting === 'originalHeight'}\n                                                onChange={changeForm} />\n                                            <span></span>\n                                        </span>\n                                        <span>原始高度</span>\n                                    </label>\n                                </div>\n                            )\n                    }\n                    {\n                        setting.direction === 'vertical' ? (\n                            <div className=\"form-radio\" >\n                                <p>对齐方式：</p>\n                                <label htmlFor=\"alignLeft\" css={radioStyle}>\n                                    <span>\n                                        <input\n                                            type=\"radio\"\n                                            id=\"alignLeft\"\n                                            name=\"alignVertical\"\n                                            value=\"alignLeft\"\n                                            checked={setting.alignVertical === 'alignLeft'}\n                                            disabled={setting.widthSetting === 'equalWidth'}\n                                            onChange={changeForm} />\n                                        <span></span>\n                                    </span>\n                                    <span>左对齐</span>\n                                </label>\n                                <label htmlFor=\"alignCenterVertical\" css={radioStyle}>\n                                    <span>\n                                        <input\n                                            type=\"radio\"\n                                            id=\"alignCenterVertical\"\n                                            name=\"alignVertical\"\n                                            value=\"alignCenterVertical\"\n                                            checked={setting.alignVertical === 'alignCenterVertical'}\n                                            disabled={setting.widthSetting === 'equalWidth'}\n                                            onChange={changeForm} />\n                                        <span></span>\n                                    </span>\n                                    <span>左右居中</span>\n                                </label>\n                                <label htmlFor=\"alignRight\" css={radioStyle}>\n                                    <span>\n                                        <input\n                                            type=\"radio\"\n                                            id=\"alignRight\"\n                                            name=\"alignVertical\"\n                                            value=\"alignRight\"\n                                            checked={setting.alignVertical === 'alignRight'}\n                                            disabled={setting.widthSetting === 'equalWidth'}\n                                            onChange={changeForm} />\n                                        <span></span>\n                                    </span>\n                                    <span> 右对齐</span>\n                                </label>\n                            </div>\n                        ) : setting.direction === 'horizontal' ? (\n                            <div className=\"form-radio\" >\n                                <p>对齐方式：</p>\n                                <label htmlFor=\"alignTop\" css={radioStyle}>\n                                    <span>\n                                        <input\n                                            type=\"radio\"\n                                            id=\"alignTop\"\n                                            name=\"alignHorizontal\"\n                                            value=\"alignTop\"\n                                            checked={setting.alignHorizontal === 'alignTop'}\n                                            disabled={setting.heightSetting === 'equalHeight'}\n                                            onChange={changeForm} />\n                                        <span></span>\n                                    </span>\n                                    <span>上对齐</span>\n                                </label>\n                                <label htmlFor=\"alignCenterHorizontal\" css={radioStyle}>\n                                    <span>\n                                        <input\n                                            type=\"radio\"\n                                            id=\"alignCenterHorizontal\"\n                                            name=\"alignHorizontal\"\n                                            value=\"alignCenterHorizontal\"\n                                            checked={setting.alignHorizontal === 'alignCenterHorizontal'}\n                                            disabled={setting.heightSetting === 'equalHeight'}\n                                            onChange={changeForm} />\n                                        <span></span>\n                                    </span>\n                                    <span>上下居中</span>\n                                </label>\n                                <label htmlFor=\"alignBottom\" css={radioStyle}>\n                                    <span>\n                                        <input\n                                            type=\"radio\"\n                                            id=\"alignBottom\"\n                                            name=\"alignHorizontal\"\n                                            value=\"alignBottom\"\n                                            checked={setting.alignHorizontal === 'alignBottom'}\n                                            disabled={setting.heightSetting === 'equalHeight'}\n                                            onChange={changeForm} />\n                                        <span></span>\n                                    </span>\n                                    <span>下对齐</span>\n                                </label>\n                            </div>\n                        ) : ''\n                    }\n                    <div className=\"form-radio\" >\n                        <p>背景颜色：</p>\n                        <label htmlFor=\"white\" css={radioStyle}>\n                            <span>\n                                <input\n                                    type=\"radio\"\n                                    id=\"white\"\n                                    name=\"backgroundColor\"\n                                    value=\"#ffffff\"\n                                    checked={setting.backgroundColor === '#ffffff'}\n                                    onChange={changeForm} />\n                                <span></span>\n                            </span>\n                            <span>白色</span>\n                        </label>\n                        <label htmlFor=\"grey\" css={radioStyle}>\n                            <span>\n                                <input\n                                    type=\"radio\"\n                                    id=\"grey\"\n                                    name=\"backgroundColor\"\n                                    value=\"#808080\"\n                                    checked={setting.backgroundColor === '#808080'}\n                                    onChange={changeForm} />\n                                <span></span>\n                            </span>\n                            <span> 灰色</span>\n                        </label>\n                        <label htmlFor=\"black\" css={radioStyle}>\n                            <span>\n                                <input\n                                    type=\"radio\"\n                                    id=\"black\"\n                                    name=\"backgroundColor\"\n                                    value=\"#000000\"\n                                    checked={setting.backgroundColor === '#000000'}\n                                    onChange={changeForm} />\n                                <span></span>\n                            </span>\n                            <span>黑色</span>\n                        </label>\n                    </div>\n                    <div className=\"form-slider\" >\n                        <p>图片间距：</p>\n                        <label htmlFor=\"margin\">\n                            <input\n                                type=\"range\"\n                                id=\"margin\"\n                                name=\"margin\"\n                                min=\"0\"\n                                max=\"500\"\n                                value={margin}\n                                onChange={onChangeSlider} />\n                            {margin}px\n                            </label>\n                    </div>\n                    <div className=\"form-text-input\" >\n                        <p>添加水印：</p>\n                        <input\n                            type=\"text\"\n                            id=\"watermark\"\n                            name=\"watermark\"\n                            placeholder=\"请输入要显示的水印...\"\n                            value={setting.water} onInput={onInput} />\n                    </div>\n                    {\n                        setting.watermark ? (\n                            <>\n                                <div className=\"form-color\" >\n                                    <p>水印颜色：</p>\n                                    <label htmlFor=\"watermarkColor\">\n                                        <input\n                                            type=\"color\"\n                                            id=\"watermarkColor\"\n                                            name=\"watermarkColor\"\n                                            value={watermarkColor}\n                                            onChange={onChangeSlider} />\n                                        {watermarkColor}\n                                    </label>\n                                </div>\n                                <div className=\"form-slider\" >\n                                    <p>透明度：</p>\n                                    <label htmlFor=\"opacity\">\n                                        <input\n                                            type=\"range\"\n                                            id=\"opacity\"\n                                            name=\"opacity\"\n                                            min=\"0\"\n                                            max=\"1\"\n                                            step=\"0.1\"\n                                            value={opacity}\n                                            onChange={onChangeSlider} />\n                                        {opacity}\n                                    </label>\n                                </div>\n                                <div className=\"form-slider\" >\n                                    <p>水印大小：</p>\n                                    <label htmlFor=\"fontSize\">\n                                        <input\n                                            type=\"range\"\n                                            id=\"fontSize\"\n                                            name=\"fontSize\"\n                                            min=\"1\"\n                                            max=\"500\"\n                                            value={fontSize}\n                                            onChange={onChangeSlider} />\n                                        {fontSize}px\n                                </label>\n                                </div>\n                            </>\n                        ) : ''\n                    }\n                </form>\n            </section>\n            <section>\n                <div css={buttonsStyle}>\n                    <div className=\"chooseImageBtn button\">\n                        <label htmlFor=\"input-file\">\n                            <input\n                                id=\"input-file\"\n                                type=\"file\"\n                                onChange={onSelectImages}\n                                multiple\n                                accept=\"image/*\"\n                                onClick={e => { e.target.value = null }}>\n                            </input>\n                            <span>选择图片</span>\n                        </label>\n                    </div>\n                    <div className=\"saveImageBtn button\">\n                        <a\n                            download\n                            onClick={saveImage}\n                            id=\"download\"\n                            href=\"https://kejiweixun.com/merge-images/\"\n                            role=\"button\">\n                            保存图片\n                            </a>\n                    </div>\n                </div>\n                <div css={thumbnailStyle}>\n                    {\n                        thumbnails.map((thumbnail, index) => {\n                            return (\n                                <div\n                                    role=\"presentation\"\n                                    key={thumbnail.url + Math.random()}\n                                    draggable=\"true\"\n                                    onDragStart={onDrag}\n                                    onDrop={onDrop}\n                                    onDragOver={onDragOver}\n                                    onDragEnter={onDragEnter}\n                                    onDragLeave={onDragLeave}>\n                                    <img\n                                        src={thumbnail.dataURL}\n                                        className=\"image-thumbnail\"\n                                        alt=\"thumbnail\">\n                                    </img>\n                                    <div role=\"button\"\n                                        tabIndex=\"0\"\n                                        onClick={deleteImage}\n                                        onKeyDown={onEnterKeyDeleteImage}\n                                        data-index={index}\n                                        className=\"delete-icon\"\n                                    >\n                                        <img\n                                            src={deleteIcon}\n                                            alt=\"delete icon\">\n                                        </img>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                <div css={canvasContainerStyle}>\n                    <canvas id=\"canvas\" css={canvasStyle} width=\"0px\" height=\"0px\" ></canvas>\n                </div>\n                {\n                    images.length ? (\n                        <div css={imageInfo}>\n                            分辨率: {outputImageSize.width}px * {outputImageSize.height}px\n                        </div>\n                    ) : ''\n                }\n            </section>\n            <ISSO title=\"图片拼接\" slug={`merge-images/`} />\n        </Layout >\n    )\n}"],"sourceRoot":""}