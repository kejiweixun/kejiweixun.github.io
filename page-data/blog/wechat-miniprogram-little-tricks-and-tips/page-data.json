{"componentChunkName":"component---src-template-blog-post-template-js","path":"/blog/wechat-miniprogram-little-tricks-and-tips/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<p>这是我在写小程序过程中遇到的一些问题和经验, 其中一些问题经常让人花很多时间去 debug, 其中一些小经验用了很多时间才领悟得到, 所以汇总在这里备忘.</p>\n<ul>\n<li><code class=\"language-text\">wx.getSystemInfo()</code> 有些设备不会返回 <code class=\"language-text\">devicePixelRatio</code>, 用 <code class=\"language-text\">pixelRatio</code> 保险点;</li>\n<li>广告初始化考虑放在 onReady, 放在 onLoad 会减慢加载速度;</li>\n<li>iOS 可以惯性滚动 <code class=\"language-text\">-webkit-overflow-scrolling: touch;</code>;</li>\n<li>没有绑定在页面的数据不要用 setData, 可以放在 globalData 中;</li>\n<li>hideloading 这些最好放在 setData 的回调函数;</li>\n<li>canvas 导出为图片之后, dpi 都会变成 72, 所以如果原图 dpi 高于 72, 导出的分辨率不变, 那都会变模糊;</li>\n<li>一张 x * y 像素的图片, 在设备上应该用 x/dpr * y/dpr 的 css 尺寸来展示, 这样才不会模糊;</li>\n<li>canvas 设置字体大小 x, 最终显示的字体的高度大概是 x * ratio 像素?;</li>\n<li><code class=\"language-text\">ctx.drawImage</code> 如果是本地图片, 要写绝对路径, 例如 <code class=\"language-text\">/pages/index/images/logo.png</code> 表示 draw index 文件夹中的 images 文件夹中的 logo 图片;</li>\n<li>用了 <code class=\"language-text\">ctx.scale()</code> 和 <code class=\"language-text\">ctx.rotate()</code> 之后, 最好习惯性地恢复远原样, ctx.save() 和 ctx.restore();</li>\n<li><code class=\"language-text\">ctx.measureWidth()</code> 要在 <code class=\"language-text\">ctx.font()</code> 之后使用;</li>\n<li>input 有时候输入后结果显示 <code class=\"language-text\">[object Promise]</code>, 可能是因为 input 绑定的事件是一个 async 函数;</li>\n<li><code class=\"language-text\">wx.createSelectorQuery()</code> 真机调试时可能无法进入回调, 所以如果依赖它动态设置元素位置, 那这个元素真机调试时可能显示错位, 预览和开发者工具都可以;</li>\n<li><code class=\"language-text\">wx.getMenuButtonBoundingClientRect()</code> pc 端预览获得的数据都是 0, 但真机调试又没有问题;</li>\n<li>电脑端 <code class=\"language-text\">wx.chooseImage()</code> 选择图片无法选择原图, 电脑端 <code class=\"language-text\">wx.canvasToTempFilePath()</code> 导出的图片长边最多只有 3000, 导致短边可能被压缩过多, 变模糊;</li>\n<li>canvas 2d ios 通过 <code class=\"language-text\">wx.canvasToTempFilePath()</code> 导出的图片清晰度似乎还受 canvas 的 css 尺寸影响, 虽然最后导出的图片分辨率正常, 但图片看起来很多锯齿, 只因这个 canvas 的 css 尺寸设置太低了;</li>\n<li>canvas 2d 修改 css 尺寸之后应该重新 query, query 操作在 setData 的回调函数进行, 不要再用修改前的 ctx 进行处理, 否则可能导致图片变形;</li>\n<li>在修改 canvas 尺寸之前 clear 一下, 可以避免修改过程中短暂的图片显示变形;</li>\n<li>小程序不支持 ctx.filter;</li>\n<li><code class=\"language-text\">&lt;movable-area&gt;</code> 和 <code class=\"language-text\">&lt;movable-view&gt;</code> 的 css 样式必须显式设置 width 和 height, 否则就是 10px * 10px, 可以显式设置为 auto 或 100%, 这样这个 <code class=\"language-text\">&lt;movable-area&gt;</code> 的宽高会自动等于内容的宽高, 事实上对于 block 元素的 height 和 width, 其默认值就是 auto, 但是小程序要求即使是默认值也要显式写出来;</li>\n<li>小程序不支持 <code class=\"language-text\">:last-child</code> 这种选择器;</li>\n</ul>","frontmatter":{"title":"写小程序过程中遇到的一些小问题和小经验","date":"2020/07/02","slug":"wechat-miniprogram-little-tricks-and-tips","description":null}}}]}},"pageContext":{"slug":"wechat-miniprogram-little-tricks-and-tips"}},"staticQueryHashes":["1518281631"]}