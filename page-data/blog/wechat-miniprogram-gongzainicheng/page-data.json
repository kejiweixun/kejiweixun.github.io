{"componentChunkName":"component---src-template-blog-post-template-js","path":"/blog/wechat-miniprogram-gongzainicheng/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<p>写了个微信小程序: 公仔昵称.</p>\n<h3>为什么写这个小程序</h3>\n<p>练手, 这是一个比较简单的小程序; 2016 年底我做了一个关于如何制作微信透明头像和透明昵称的视频, 发现人们对起一个有趣的昵称这个话题很感兴趣.</p>\n<h3>公仔昵称有什么不同</h3>\n<p>用起来很简单, 公仔昵称只有一个页面, 只需输入一次, 就可以得到用内置的模板生成的各种花式昵称, 你可以在同一个页面对比各种昵称效果, 然后挑选自己最喜欢的. 其他小程序有很多页面, 要求用户每一种模板都输入一次, 有点麻烦.</p>\n<p>微信对昵称的设置限制比较多, 其它小程序生成的昵称很多不能用于微信, 公仔昵称的昵称基本可用于微信, 对于不可用于微信的部分, 我也做了提示.</p>\n<p>用模板生成的昵称因为用的人多, 所以已经不那么个性了, 公仔昵称收集了 1000+ 可用于微信的特殊字符, 用户可以从这些字符自由组合成真正属于自己的个性昵称.</p>\n<h3>经验总结</h3>\n<p>设计并不好看. 觉得自己大脑缺少设计素材, 想不出好看的界面, 我不是一个天马行空富有创意的人, 以后多看看别人是怎么设计的, 多积累一点灵感.</p>\n<p>为了提高小程序开发速度, 写了一个简单的 boilerplate, 以后根据实际经验和需求不断丰富完善.</p>\n<p>微信小程序的 wxss 不支持通配符选择器 <code class=\"language-text\">*</code>, 不过可以在 app.wxss 用标签选择器一个个地把标签设置为你希望的样式:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* app.wxss */</span>\n<span class=\"token selector\">view</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 30rpx<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>微信小程序页面加载太多数据时可能会显示白屏, 不是很明白原因, 分页显示数据可解决.</p>\n<p>bindtap 函数无法获取 dataset 的数据, 原来我一直用 <code class=\"language-text\">e.target.data</code>, 把它改成 <code class=\"language-text\">e.currentTarget.data</code> 就可以了. <code class=\"language-text\">target</code> 和 <code class=\"language-text\">currentTarget</code> 分别是源组件和当前组件.</p>\n<p>在页面添加一个分享按钮, 可以使用 <code class=\"language-text\">&lt;button&gt;</code> 组件, 但样式怎么自定义呢? 怎么让它看起来不是一个按钮的样子? css 可以这样写:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.share-button::after</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.share-button</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Unicode 编码如果超过 4 个 16 进制数, 可以加大括号表示, 例如 \\u{1f1ec}, 有时候可以用两个 4 个16 进制的数字表示.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\u{1f1ec}'</span> <span class=\"token operator\">===</span> <span class=\"token string\">'\\uD83C\\uDDEC'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span></code></pre></div>\n<p>在 js 代码中, '\\u0061' 和 'a' 是一样的东西, '\\\\u0061' 和 '\\u0061' 差别很大, 前者表示 \\u0061, 后者表示 a.</p>\n<p>\\u0061 表示的是一个 string, string 要用引号标注, 但 0x0061 是一个 number, 不需要引号. 所以 <code class=\"language-text\">String.fromCodePoint(0x0061)</code> 是正确的写法, 但 <code class=\"language-text\">String.fromCodePoint(\\u0061)</code> 是错误的写法.</p>","frontmatter":{"title":"微信小程序: 公仔昵称","date":"2019/11/27","slug":"wechat-miniprogram-gongzainicheng","description":null}}}]}},"pageContext":{"slug":"wechat-miniprogram-gongzainicheng"}}}